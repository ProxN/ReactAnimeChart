{"version":3,"file":"static/webpack/static\\development\\pages\\anime.js.517a4123acf683032073.hot-update.js","sources":["webpack:///./components/Anime.js"],"sourcesContent":["import React,{memo} from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { FaRegStar, FaRegHeart, FaRegPlayCircle } from \"react-icons/fa\";\r\nimport useToggler from \"../hooks/useToggle\";\r\nimport {\r\n  GridCell,\r\n  AnimeContainer,\r\n  AnimeDesc,\r\n  AnimeGenres,\r\n  AnimeHeader,\r\n  Overlay,\r\n  ListItem,\r\n  TimeCount,\r\n  Span,\r\n  Studio,\r\n  AnimeRank,\r\n  AnimeTrailer,\r\n  Img\r\n} from \"../styles/AnimeStyles\";\r\nimport AddIcon from \"./Icon\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Anime({ anime,darkTheme }) {\r\n  const [showDropDown, toggle] = useToggler(false);\r\n  return (\r\n    <AnimeContainer isDark={darkTheme}>\r\n      <GridCell top={1} left={1}>\r\n        <a href={anime.siteUrl} target='_blanc'>\r\n          <Img src={anime.coverImage.extraLarge} />\r\n        </a>\r\n      </GridCell>\r\n      <Overlay left={1} top={1}>\r\n        <a href={anime.siteUrl}>{anime.title.romaji}</a>\r\n        <Studio>\r\n          <a href={anime.formatStudio ? anime.formatStudio.siteUrl : anime.siteUrl}> {anime.formatStudio ? anime.formatStudio.name :''}</a>\r\n        </Studio>\r\n      </Overlay>\r\n      <AnimeRank left={1} top={1}>\r\n        <span>\r\n          <FaRegHeart /> #{anime.formatRank}\r\n        </span>\r\n        <span style={{ marginTop: \"1px\" }}>\r\n          <FaRegStar color='#eccc68' />\r\n\r\n          {anime.averageScore / 10}\r\n        </span>\r\n      </AnimeRank>\r\n\r\n      <GridCell left={2} top={1}>\r\n        <AnimeHeader>\r\n          <AnimeHeaderContent>\r\n            <Span>{anime.formatEpiosde}</Span>\r\n            <TimeCount>{anime.formatTime}</TimeCount>\r\n          </AnimeHeaderContent>\r\n\r\n          <AnimeTrailer>\r\n            {anime.trailer ? <Img src={anime.trailer.thumbnail} /> : \"\"}\r\n            <FaRegPlayCircle />\r\n          </AnimeTrailer>\r\n        </AnimeHeader>\r\n        <AnimeDesc>\r\n          <p>{ReactHtmlParser(anime.description)}</p>\r\n        </AnimeDesc>\r\n        <AnimeGenres>\r\n          <ul>\r\n            {anime.genres.map((el, i) => {\r\n              if (i < 2) {\r\n                return (\r\n                  <ListItem color={anime.coverImage.color} key={i}>\r\n                    {el}\r\n                  </ListItem>\r\n                );\r\n              }\r\n            })}\r\n          </ul>\r\n        </AnimeGenres>\r\n      </GridCell>\r\n      <AddIcon toggle={toggle} id={anime.id} />\r\n\r\n      {showDropDown && (\r\n        <DropDown\r\n          toggle={toggle}\r\n          id={anime.id}\r\n          leaveHandler={toggle}\r\n        />\r\n      )}\r\n    </AnimeContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Anime);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAQA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAQA;AACA;AACA;;;;A","sourceRoot":""}