{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport withApollo from \"../lib/withApollo\";\nimport AnimeApp from \"../components/AnimeApp\";\nimport \"./index.css\";\nimport Header from \"../components/Header\";\nimport { ThemeProvider } from \"../contexts/theme.context\";\nimport PageContent from \"../components/PageContent\";\n\nfunction Anime(_ref) {\n  var isServer = _ref.isServer,\n      query = _ref.query;\n  return __jsx(\"div\", null, __jsx(ThemeProvider, null, __jsx(Header, null), __jsx(PageContent, null, __jsx(AnimeApp, {\n    season: query.name\n  }))));\n}\n\nAnime.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, query = _ref2.query;\n            return _context.abrupt(\"return\", {\n              isServer: !!req,\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withApollo(Anime);","map":{"version":3,"sources":["I:\\AnimeChart\\animechart\\pages\\anime.js"],"names":["React","withApollo","AnimeApp","Header","ThemeProvider","PageContent","Anime","isServer","query","name","getInitialProps","req"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,SAASC,KAAT,OAAoC;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,KAAS,QAATA,KAAS;AAClC,SACE,mBAEE,MAAC,aAAD,QACE,MAAC,MAAD,OADF,EAEE,MAAC,WAAD,QACE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEA,KAAK,CAACC;AAAxB,IADF,CAFF,CAFF,CADF;AAWD;;AACDH,KAAK,CAACI,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcH,KAAd,SAAcA,KAAd;AAAA,6CACf;AAAED,cAAAA,QAAQ,EAAE,CAAC,CAACI,GAAd;AAAmBH,cAAAA,KAAK,EAALA;AAAnB,aADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAeP,UAAU,CAACK,KAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport withApollo from \"../lib/withApollo\";\r\nimport AnimeApp from \"../components/AnimeApp\";\r\nimport \"./index.css\";\r\nimport Header from \"../components/Header\";\r\nimport { ThemeProvider } from \"../contexts/theme.context\";\r\nimport PageContent from \"../components/PageContent\";\r\n\r\nfunction Anime({ isServer, query }) {\r\n  return (\r\n    <div>\r\n      {/* <h1>Home page. Is it on server? - {isServer ? 'Yes' : 'No'}</h1> */}\r\n      <ThemeProvider>\r\n        <Header />\r\n        <PageContent>\r\n          <AnimeApp season={query.name} />\r\n        </PageContent>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\nAnime.getInitialProps = async ({ req, query }) => {\r\n  return { isServer: !!req, query };\r\n};\r\nexport default withApollo(Anime);\r\n"]},"metadata":{},"sourceType":"module"}