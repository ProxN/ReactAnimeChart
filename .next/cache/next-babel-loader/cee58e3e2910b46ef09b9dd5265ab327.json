{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\n// const reducer = (state, action) => {\n//     switch (action.type) {\n//       case \"ADD-HIGHLIGHT\":\n//         const newHighlight = state.find(\n//           high => high.key === action.key\n//         );\n//         if (newHighlight) {\n//           const newHigh = state.highlights.map(el =>\n//             el.key === action.key ? { ...el, value: action.value } : el\n//           );\n//           return newHigh;\n//         } else {\n//           return [...state,{ key: action.key, value: action.value}];\n//         }\n//       case \"DELETE-HIGHLIGHT\":\n//         return state.filter(h => h.key !== action.key);\n//       case 'MOOD' :\n//           return {state};\n//       default:\n//         return state;\n//     }\n//   };\n//   export default reducer;\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD-HIGHLIGHT\":\n      var newHighlight = state.highlights.find(function (high) {\n        return high.key === action.key;\n      });\n\n      if (newHighlight) {\n        var newHigh = state.highlights.map(function (el) {\n          return el.key === action.key ? _objectSpread({}, el, {\n            value: action.value\n          }) : el;\n        });\n        return _objectSpread({}, state, {\n          highlights: newHigh\n        });\n      } else {\n        return _objectSpread({}, state, {\n          highlights: [].concat(_toConsumableArray(state.highlights), [{\n            key: action.key,\n            value: action.value\n          }])\n        });\n      }\n\n    case \"DELETE-HIGHLIGHT\":\n      return _objectSpread({}, state, {\n        highlights: state.highlights.filter(function (h) {\n          return h.key !== action.key;\n        })\n      });\n\n    case 'MOOD':\n      return _objectSpread({}, state, {\n        mood: action.mood\n      });\n\n    case 'CHANGE-THEME':\n      return _objectSpread({}, state, {\n        isDarkMode: !state.isDarkMode\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["I:\\AnimeChart\\animechart\\reducers\\anime.reducer.js"],"names":["reducer","state","action","type","newHighlight","highlights","find","high","key","newHigh","map","el","value","filter","h","mood","isDarkMode"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,UAAMC,YAAY,GAAGH,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CACnB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACM,GAAxB;AAAA,OADe,CAArB;;AAGA,UAAIJ,YAAJ,EAAkB;AAChB,YAAMK,OAAO,GAAGR,KAAK,CAACI,UAAN,CAAiBK,GAAjB,CAAqB,UAAAC,EAAE;AAAA,iBACrCA,EAAE,CAACH,GAAH,KAAWN,MAAM,CAACM,GAAlB,qBAA6BG,EAA7B;AAAiCC,YAAAA,KAAK,EAAEV,MAAM,CAACU;AAA/C,eAAyDD,EADpB;AAAA,SAAvB,CAAhB;AAGA,iCAAYV,KAAZ;AAAmBI,UAAAA,UAAU,EAAEI;AAA/B;AACD,OALD,MAKO;AACL,iCACKR,KADL;AAEEI,UAAAA,UAAU,+BACLJ,KAAK,CAACI,UADD,IAER;AAAEG,YAAAA,GAAG,EAAEN,MAAM,CAACM,GAAd;AAAmBI,YAAAA,KAAK,EAAEV,MAAM,CAACU;AAAjC,WAFQ;AAFZ;AAOD;;AACH,SAAK,kBAAL;AACE,+BAAWX,KAAX;AAAiBI,QAAAA,UAAU,EAACJ,KAAK,CAACI,UAAN,CAAiBQ,MAAjB,CAAwB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACN,GAAF,KAAUN,MAAM,CAACM,GAArB;AAAA,SAAzB;AAA5B;;AACF,SAAK,MAAL;AACI,+BAAWP,KAAX;AAAiBc,QAAAA,IAAI,EAACb,MAAM,CAACa;AAA7B;;AACJ,SAAK,cAAL;AACI,+BAAWd,KAAX;AAAiBe,QAAAA,UAAU,EAAC,CAACf,KAAK,CAACe;AAAnC;;AACJ;AACE,aAAOf,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,OAAf","sourcesContent":["\r\n// const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case \"ADD-HIGHLIGHT\":\r\n//         const newHighlight = state.find(\r\n//           high => high.key === action.key\r\n//         );\r\n//         if (newHighlight) {\r\n//           const newHigh = state.highlights.map(el =>\r\n//             el.key === action.key ? { ...el, value: action.value } : el\r\n//           );\r\n//           return newHigh;\r\n//         } else {\r\n//           return [...state,{ key: action.key, value: action.value}];\r\n//         }\r\n//       case \"DELETE-HIGHLIGHT\":\r\n//         return state.filter(h => h.key !== action.key);\r\n//       case 'MOOD' :\r\n//           return {state};\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n  \r\n//   export default reducer;\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD-HIGHLIGHT\":\r\n      const newHighlight = state.highlights.find(\r\n        high => high.key === action.key\r\n      );\r\n      if (newHighlight) {\r\n        const newHigh = state.highlights.map(el =>\r\n          el.key === action.key ? { ...el, value: action.value } : el\r\n        );\r\n        return { ...state, highlights: newHigh };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          highlights: [\r\n            ...state.highlights,\r\n            { key: action.key, value: action.value }\r\n          ]\r\n        };\r\n      }\r\n    case \"DELETE-HIGHLIGHT\":\r\n      return {...state,highlights:state.highlights.filter(h => h.key !== action.key)};\r\n    case 'MOOD' :\r\n        return {...state,mood:action.mood};\r\n    case 'CHANGE-THEME':\r\n        return {...state,isDarkMode:!state.isDarkMode}    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}