{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($page: Int, $perPage: Int, $seasonYear: Int, $season: MediaSeason) {\\n    Page(page: $page, perPage: $perPage) {\\n      pageInfo {\\n        total\\n        lastPage\\n        perPage\\n        currentPage\\n        perPage\\n        hasNextPage\\n      }\\n      media(\\n        seasonYear: $seasonYear\\n        isAdult: false\\n        season: $season\\n        sort: POPULARITY_DESC\\n      ) {\\n        title {\\n          english\\n          romaji\\n          native\\n        }\\n        id\\n        format\\n        status\\n        startDate {\\n          year\\n          month\\n          day\\n        }\\n        episodes\\n        type\\n        synonyms\\n        coverImage {\\n          extraLarge\\n          large\\n          medium\\n          color\\n        }\\n        trailer {\\n          thumbnail\\n        }\\n        genres\\n        averageScore\\n        rankings {\\n          rank\\n          season\\n        }\\n        source\\n        siteUrl\\n        trailer {\\n          id\\n        }\\n        studios(isMain: true) {\\n          nodes {\\n            id\\n            name\\n            siteUrl\\n          }\\n        }\\n        description\\n        tags {\\n          name\\n        }\\n        externalLinks {\\n          id\\n        }\\n\\n        nextAiringEpisode {\\n          timeUntilAiring\\n          episode\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nexport var GET_ANIMES = gql(_templateObject());","map":{"version":3,"sources":["I:\\AnimeChart\\animechart\\queries\\animeQuery.js"],"names":["gql","GET_ANIMES"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,IAAMC,UAAU,GAAGD,GAAH,mBAAhB","sourcesContent":["import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ANIMES = gql`\r\n  query($page: Int, $perPage: Int, $seasonYear: Int, $season: MediaSeason) {\r\n    Page(page: $page, perPage: $perPage) {\r\n      pageInfo {\r\n        total\r\n        lastPage\r\n        perPage\r\n        currentPage\r\n        perPage\r\n        hasNextPage\r\n      }\r\n      media(\r\n        seasonYear: $seasonYear\r\n        isAdult: false\r\n        season: $season\r\n        sort: POPULARITY_DESC\r\n      ) {\r\n        title {\r\n          english\r\n          romaji\r\n          native\r\n        }\r\n        id\r\n        format\r\n        status\r\n        startDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        episodes\r\n        type\r\n        synonyms\r\n        coverImage {\r\n          extraLarge\r\n          large\r\n          medium\r\n          color\r\n        }\r\n        trailer {\r\n          thumbnail\r\n        }\r\n        genres\r\n        averageScore\r\n        rankings {\r\n          rank\r\n          season\r\n        }\r\n        source\r\n        siteUrl\r\n        trailer {\r\n          id\r\n        }\r\n        studios(isMain: true) {\r\n          nodes {\r\n            id\r\n            name\r\n            siteUrl\r\n          }\r\n        }\r\n        description\r\n        tags {\r\n          name\r\n        }\r\n        externalLinks {\r\n          id\r\n        }\r\n\r\n        nextAiringEpisode {\r\n          timeUntilAiring\r\n          episode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}